{
    "swagger": "2.0",
    "info": {
        "description": "This is a sample swagger for Fiber",
        "title": "Fiber Example API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "email": "fiber@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "basePath": "/api/v1",
    "paths": {
        "/agencies": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get list agency",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Agency"
                ],
                "summary": "Get list agency details api",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page Size",
                        "name": "pageSize",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "default": "desc",
                        "description": "Sort direction",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search term",
                        "name": "search",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/agencies.FindAgencyResp"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Insert agency",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Agency"
                ],
                "summary": "Create agency api",
                "parameters": [
                    {
                        "description": "Create agency body",
                        "name": "post",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/agencies.WriteAgencyRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/agencies.Agency"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/agencies/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get one agency",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Agency"
                ],
                "summary": "Get agency details api",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Agency ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/agencies.Agency"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update agency",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Agency"
                ],
                "summary": "Update agency api",
                "parameters": [
                    {
                        "description": "Update agency body",
                        "name": "post",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/agencies.WriteAgencyRequest"
                        }
                    },
                    {
                        "type": "integer",
                        "description": "Agency ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/agencies.Agency"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/attendances": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get list attendance",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Attendance"
                ],
                "summary": "Get list attendance details api",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page Size",
                        "name": "pageSize",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "default": "desc",
                        "description": "Sort direction",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Class id",
                        "name": "classId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Time range",
                        "name": "period",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/attendances.Attendance"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Insert attendance",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Attendance"
                ],
                "summary": "Create attendance api",
                "parameters": [
                    {
                        "description": "Create attendance body",
                        "name": "post",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/attendances.CreateAttendanceRequest"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Patch attendance",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Attendance"
                ],
                "summary": "Patch attendance api",
                "parameters": [
                    {
                        "description": "Patch attendance body",
                        "name": "post",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/attendances.UpdateAttendanceRequest"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/attendances.Attendance"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/classes": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get list class",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Class"
                ],
                "summary": "Get list class details api",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page Size",
                        "name": "pageSize",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "default": "desc",
                        "description": "Sort direction",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search term",
                        "name": "search",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/classes.FindClassResp"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Insert class",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Class"
                ],
                "summary": "Create class api",
                "parameters": [
                    {
                        "description": "Create class body",
                        "name": "post",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/classes.WriteClassRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/classes.Class"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/classes/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get one class",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Class"
                ],
                "summary": "Get class details api",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Class ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/classes.Class"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update class",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Class"
                ],
                "summary": "Update class api",
                "parameters": [
                    {
                        "description": "Update class body",
                        "name": "post",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/classes.WriteClassRequest"
                        }
                    },
                    {
                        "type": "integer",
                        "description": "Class ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/classes.Class"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/classes/{id}/export-excel": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get one class excel file",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Class"
                ],
                "summary": "Get class excel api",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Class ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/registrations": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get list registration",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Registration"
                ],
                "summary": "Get list registration details api",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page Size",
                        "name": "pageSize",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "default": "desc",
                        "description": "Sort direction",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search term",
                        "name": "search",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/registrations.FindRegistrationResp"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Insert registration",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Registration"
                ],
                "summary": "Create registration api",
                "parameters": [
                    {
                        "description": "Create registration body",
                        "name": "post",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/registrations.WriteRegistrationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/registrations.Registration"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete registration",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Registration"
                ],
                "summary": "Delete registration api",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "collectionFormat": "csv",
                        "description": "Registration IDs",
                        "name": "ids",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/registrations/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get one registration",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Registration"
                ],
                "summary": "Get registration details api",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Registration ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/registrations.Registration"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update registration",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Registration"
                ],
                "summary": "Update registration api",
                "parameters": [
                    {
                        "description": "Update registration body",
                        "name": "post",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/registrations.WriteRegistrationRequest"
                        }
                    },
                    {
                        "type": "integer",
                        "description": "Registration ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/registrations.Registration"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Mark a registration as processed",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Registration"
                ],
                "summary": "Mark as done registration api",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Registration ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/students": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get list student",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Student"
                ],
                "summary": "Get list student details api",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page Size",
                        "name": "pageSize",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "default": "desc",
                        "description": "Sort direction",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search term",
                        "name": "search",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/students.FindStudentResp"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Insert student",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Student"
                ],
                "summary": "Create student api",
                "parameters": [
                    {
                        "description": "Create student body",
                        "name": "post",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/students.WriteStudentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/students.Student"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete student",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Student"
                ],
                "summary": "Delete student api",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "collectionFormat": "csv",
                        "description": "Student IDs",
                        "name": "ids",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/students/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get one student",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Student"
                ],
                "summary": "Get student details api",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Student ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/students.Student"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update student",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Student"
                ],
                "summary": "Update student api",
                "parameters": [
                    {
                        "description": "Update student body",
                        "name": "post",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/students.WriteStudentRequest"
                        }
                    },
                    {
                        "type": "integer",
                        "description": "Student ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/students.Student"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "agencies.Agency": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "agencies.FindAgencyResp": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/agencies.Agency"
                    }
                },
                "page": {
                    "type": "integer"
                }
            }
        },
        "agencies.WriteAgencyRequest": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                }
            }
        },
        "attendances.AttendEnum": {
            "type": "integer",
            "enum": [
                0,
                1,
                2,
                3,
                4
            ],
            "x-enum-varnames": [
                "Absented",
                "Attended",
                "Excused",
                "Dayoff",
                "Holiday"
            ]
        },
        "attendances.Attendance": {
            "type": "object",
            "properties": {
                "attendedAt": {
                    "type": "string"
                },
                "attendedStatus": {
                    "type": "string",
                    "enum": [
                        "absented",
                        "attended",
                        "excused",
                        "dayoff",
                        "holiday"
                    ]
                },
                "classId": {
                    "type": "integer"
                },
                "createdAt": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "studentId": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "attendances.CreateAttendanceRequest": {
            "type": "object",
            "properties": {
                "attendedAt": {
                    "type": "string"
                },
                "attendedStatus": {
                    "type": "string",
                    "enum": [
                        "absented",
                        "attended",
                        "excused",
                        "dayoff",
                        "holiday"
                    ]
                },
                "classId": {
                    "type": "integer"
                },
                "studentId": {
                    "type": "integer"
                }
            }
        },
        "attendances.UpdateAttendanceRequest": {
            "type": "object",
            "properties": {
                "attendedStatus": {
                    "$ref": "#/definitions/attendances.AttendEnum"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "classes.Class": {
            "type": "object",
            "properties": {
                "agencyId": {
                    "type": "integer"
                },
                "createdAt": {
                    "type": "string"
                },
                "grade": {
                    "description": "Grade type:\n* buds - Children who is 3 yo.\n* seed - Children who is 4 yo.\n* leaf - Children who is 5 yo.",
                    "type": "string",
                    "enum": [
                        "buds",
                        "seed",
                        "leaf"
                    ]
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "teacherId": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "classes.FindClassResp": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/classes.Class"
                    }
                },
                "page": {
                    "type": "integer"
                }
            }
        },
        "classes.WriteClassRequest": {
            "type": "object",
            "properties": {
                "agencyId": {
                    "type": "integer"
                },
                "grade": {
                    "description": "Grade type:\n* buds - Children who is 3 yo.\n* seed - Children who is 4 yo.\n* leaf - Children who is 5 yo.",
                    "type": "string",
                    "enum": [
                        "buds",
                        "seed",
                        "leaf"
                    ]
                },
                "name": {
                    "type": "string"
                },
                "teacherId": {
                    "type": "string"
                }
            }
        },
        "registrations.FindRegistrationResp": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/registrations.Registration"
                    }
                },
                "page": {
                    "type": "integer"
                }
            }
        },
        "registrations.Registration": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "isProcessed": {
                    "type": "boolean"
                },
                "note": {
                    "type": "string"
                },
                "parentName": {
                    "type": "string"
                },
                "phoneNumber": {
                    "type": "string"
                },
                "studentClass": {
                    "description": "Class type:\n* buds - Children who is 3 yo.\n* seed - Children who is 4 yo.\n* leaf - Children who is 5 yo.",
                    "type": "string",
                    "enum": [
                        "buds",
                        "seed",
                        "leaf"
                    ]
                },
                "studentDob": {
                    "type": "string"
                },
                "studentName": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "registrations.WriteRegistrationRequest": {
            "type": "object",
            "properties": {
                "note": {
                    "type": "string"
                },
                "parentName": {
                    "type": "string"
                },
                "phoneNumber": {
                    "type": "string"
                },
                "studentClass": {
                    "description": "Class type:\n* buds - Children who is 3 yo.\n* seed - Children who is 4 yo.\n* leaf - Children who is 5 yo.",
                    "type": "string",
                    "enum": [
                        "buds",
                        "seed",
                        "leaf"
                    ]
                },
                "studentDob": {
                    "type": "string"
                },
                "studentName": {
                    "type": "string"
                }
            }
        },
        "students.FindStudentResp": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/students.Student"
                    }
                },
                "page": {
                    "type": "integer"
                }
            }
        },
        "students.Parent": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "father_birth_place": {
                    "type": "string"
                },
                "father_dob": {
                    "type": "string"
                },
                "father_name": {
                    "type": "string"
                },
                "father_occupation": {
                    "type": "string"
                },
                "father_phone_number": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "mother_birth_place": {
                    "type": "string"
                },
                "mother_dob": {
                    "type": "string"
                },
                "mother_name": {
                    "type": "string"
                },
                "mother_occupation": {
                    "type": "string"
                },
                "mother_phone_number": {
                    "type": "string"
                },
                "parent_land_lord": {
                    "type": "string"
                },
                "parent_res_registration": {
                    "type": "string"
                },
                "parent_roi": {
                    "type": "string"
                },
                "parent_zalo": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "students.Student": {
            "type": "object",
            "properties": {
                "agencyId": {
                    "type": "integer"
                },
                "birthPlace": {
                    "type": "string"
                },
                "class": {
                    "$ref": "#/definitions/classes.Class"
                },
                "classId": {
                    "type": "integer"
                },
                "createdAt": {
                    "type": "string"
                },
                "dob": {
                    "type": "string"
                },
                "enrolledAt": {
                    "type": "string"
                },
                "ethnic": {
                    "type": "string"
                },
                "father_birth_place": {
                    "type": "string"
                },
                "father_dob": {
                    "type": "string"
                },
                "father_name": {
                    "type": "string"
                },
                "father_occupation": {
                    "type": "string"
                },
                "father_phone_number": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "gender": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "land_lord": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "mother_birth_place": {
                    "type": "string"
                },
                "mother_dob": {
                    "type": "string"
                },
                "mother_name": {
                    "type": "string"
                },
                "mother_occupation": {
                    "type": "string"
                },
                "mother_phone_number": {
                    "type": "string"
                },
                "parent_res_registration": {
                    "type": "string"
                },
                "parent_roi": {
                    "type": "string"
                },
                "parent_zalo": {
                    "type": "string"
                },
                "parents": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/students.Parent"
                    }
                },
                "permanentAddressCommune": {
                    "type": "string"
                },
                "permanentAddressDistrict": {
                    "type": "string"
                },
                "permanentAddressProvince": {
                    "type": "string"
                },
                "tempAddress": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "students.WriteStudentRequest": {
            "type": "object",
            "properties": {
                "agencyId": {
                    "type": "integer"
                },
                "birthPlace": {
                    "type": "string"
                },
                "classId": {
                    "type": "integer"
                },
                "dob": {
                    "type": "string"
                },
                "enrolledAt": {
                    "type": "string"
                },
                "ethnic": {
                    "type": "string"
                },
                "father_birth_place": {
                    "type": "string"
                },
                "father_dob": {
                    "type": "string"
                },
                "father_name": {
                    "type": "string"
                },
                "father_occupation": {
                    "type": "string"
                },
                "father_phone_number": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "gender": {
                    "type": "boolean"
                },
                "land_lord": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "mother_birth_place": {
                    "type": "string"
                },
                "mother_dob": {
                    "type": "string"
                },
                "mother_name": {
                    "type": "string"
                },
                "mother_occupation": {
                    "type": "string"
                },
                "mother_phone_number": {
                    "type": "string"
                },
                "parent_res_registration": {
                    "type": "string"
                },
                "parent_roi": {
                    "type": "string"
                },
                "parent_zalo": {
                    "type": "string"
                },
                "permanentAddressCommune": {
                    "type": "string"
                },
                "permanentAddressDistrict": {
                    "type": "string"
                },
                "permanentAddressProvince": {
                    "type": "string"
                },
                "tempAddress": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "description": "Apply \"bearer \" before token in authorization",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}