basePath: /api/v1
definitions:
  agencies.Agency:
    properties:
      address:
        type: string
      createdAt:
        type: string
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      phone:
        type: string
      updatedAt:
        type: string
    type: object
  agencies.FindAgencyResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/agencies.Agency'
        type: array
      page:
        type: integer
    type: object
  agencies.WriteAgencyRequest:
    properties:
      address:
        type: string
      email:
        type: string
      name:
        type: string
      phone:
        type: string
    type: object
  attendances.AttendEnum:
    enum:
    - 0
    - 1
    - 2
    - 3
    - 4
    type: integer
    x-enum-varnames:
    - Absented
    - Attended
    - Excused
    - Dayoff
    - Holiday
  attendances.Attendance:
    properties:
      attendedAt:
        type: string
      attendedStatus:
        enum:
        - absented
        - attended
        - excused
        - dayoff
        - holiday
        type: string
      classId:
        type: integer
      createdAt:
        type: string
      id:
        type: integer
      studentId:
        type: integer
      updatedAt:
        type: string
    type: object
  attendances.CreateAttendanceRequest:
    properties:
      attendedAt:
        type: string
      attendedStatus:
        enum:
        - absented
        - attended
        - excused
        - dayoff
        - holiday
        type: string
      classId:
        type: integer
      studentId:
        type: integer
    type: object
  attendances.UpdateAttendanceRequest:
    properties:
      attendedStatus:
        $ref: '#/definitions/attendances.AttendEnum'
      id:
        type: integer
    type: object
  classes.Class:
    properties:
      agency_id:
        type: integer
      createdAt:
        type: string
      grade:
        description: |-
          Grade type:
          * buds - Children who is 3 yo.
          * seed - Children who is 4 yo.
          * leaf - Children who is 5 yo.
        enum:
        - buds
        - seed
        - leaf
        type: string
      id:
        type: integer
      name:
        type: string
      teacher_id:
        type: string
      updatedAt:
        type: string
    type: object
  classes.FindClassResp:
    properties:
      data:
        items:
          $ref: '#/definitions/classes.Class'
        type: array
      page:
        type: integer
    type: object
  classes.WriteClassRequest:
    properties:
      agency_id:
        type: integer
      grade:
        description: |-
          Grade type:
          * buds - Children who is 3 yo.
          * seed - Children who is 4 yo.
          * leaf - Children who is 5 yo.
        enum:
        - buds
        - seed
        - leaf
        type: string
      name:
        type: string
      teacher_id:
        type: string
    type: object
  parents.FindParentResp:
    properties:
      data:
        items:
          $ref: '#/definitions/parents.Parent'
        type: array
      page:
        type: integer
    type: object
  parents.Parent:
    properties:
      createdAt:
        type: string
      id:
        type: integer
      landlord:
        type: string
      occupation:
        type: string
      parent_birth_place:
        type: string
      parent_dob:
        type: string
      parent_gender:
        type: boolean
      parent_name:
        type: string
      phone_number:
        type: string
      res_registration:
        type: string
      roi:
        type: string
      student_id:
        type: integer
      updatedAt:
        type: string
      zalo:
        type: string
    type: object
  parents.WriteParentRequest:
    properties:
      landlord:
        type: string
      occupation:
        type: string
      parent_birth_place:
        type: string
      parent_dob:
        type: string
      parent_gender:
        type: boolean
      parent_name:
        type: string
      phone_number:
        type: string
      res_registration:
        type: string
      roi:
        type: string
      student_id:
        type: integer
      zalo:
        type: string
    type: object
  registrations.FindRegistrationResp:
    properties:
      data:
        items:
          $ref: '#/definitions/registrations.Registration'
        type: array
      page:
        type: integer
    type: object
  registrations.Registration:
    properties:
      createdAt:
        type: string
      id:
        type: integer
      isProcessed:
        type: boolean
      note:
        type: string
      parentName:
        type: string
      phoneNumber:
        type: string
      studentClass:
        description: |-
          Class type:
          * buds - Children who is 3 yo.
          * seed - Children who is 4 yo.
          * leaf - Children who is 5 yo.
        enum:
        - buds
        - seed
        - leaf
        type: string
      studentDob:
        type: string
      studentName:
        type: string
      updatedAt:
        type: string
    type: object
  registrations.WriteRegistrationRequest:
    properties:
      note:
        type: string
      parentName:
        type: string
      phoneNumber:
        type: string
      studentClass:
        description: |-
          Class type:
          * buds - Children who is 3 yo.
          * seed - Children who is 4 yo.
          * leaf - Children who is 5 yo.
        enum:
        - buds
        - seed
        - leaf
        type: string
      studentDob:
        type: string
      studentName:
        type: string
    type: object
  students.FindStudentResp:
    properties:
      data:
        items:
          $ref: '#/definitions/students.Student'
        type: array
      page:
        type: integer
    type: object
  students.Student:
    properties:
      agency_id:
        type: integer
      birth_place:
        type: string
      class_id:
        type: integer
      createdAt:
        type: string
      dob:
        type: string
      enrolled_at:
        type: string
      ethnic:
        type: string
      first_name:
        type: string
      gender:
        type: boolean
      id:
        type: integer
      last_name:
        type: string
      permanent_address_commune:
        type: string
      permanent_address_district:
        type: string
      permanent_address_province:
        type: string
      temp_address:
        type: string
      updatedAt:
        type: string
    type: object
  students.WriteStudentRequest:
    properties:
      agency_id:
        type: integer
      birth_place:
        type: string
      class_id:
        type: integer
      dob:
        type: string
      enrolled_at:
        type: string
      ethnic:
        type: string
      first_name:
        type: string
      gender:
        type: boolean
      last_name:
        type: string
      permanent_address_commune:
        type: string
      permanent_address_district:
        type: string
      permanent_address_province:
        type: string
      temp_address:
        type: string
    type: object
info:
  contact:
    email: fiber@swagger.io
    name: API Support
  description: This is a sample swagger for Fiber
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Fiber Example API
  version: "1.0"
paths:
  /acengies/{id}:
    put:
      consumes:
      - application/json
      description: Update acengy
      parameters:
      - description: Update acengy body
        in: body
        name: post
        required: true
        schema:
          $ref: '#/definitions/agencies.WriteAgencyRequest'
      - description: Agency ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/agencies.Agency'
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Update acengy api
      tags:
      - Agency
  /agencies:
    delete:
      consumes:
      - application/json
      description: Delete agency
      parameters:
      - collectionFormat: csv
        description: Agency IDs
        in: query
        items:
          type: integer
        name: ids
        required: true
        type: array
      responses:
        "200":
          description: OK
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Delete agency api
      tags:
      - Agency
    get:
      consumes:
      - application/json
      description: Get list agency
      parameters:
      - description: Page
        in: query
        name: page
        type: integer
      - description: Page Size
        in: query
        name: pageSize
        type: integer
      - default: desc
        description: Sort direction
        enum:
        - asc
        - desc
        in: query
        name: sort
        type: string
      - description: Search term
        in: query
        name: search
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/agencies.FindAgencyResponse'
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get list agency details api
      tags:
      - Agency
    post:
      consumes:
      - application/json
      description: Insert agency
      parameters:
      - description: Create agency body
        in: body
        name: post
        required: true
        schema:
          $ref: '#/definitions/agencies.WriteAgencyRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/agencies.Agency'
        "422":
          description: Unprocessable Entity
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Create agency api
      tags:
      - Agency
  /agencies/{id}:
    get:
      consumes:
      - application/json
      description: Get one agency
      parameters:
      - description: Agency ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/agencies.Agency'
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get agency details api
      tags:
      - Agency
    patch:
      consumes:
      - application/json
      description: Mark a agency as processed
      parameters:
      - description: Agency ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Mark as done agency api
      tags:
      - Agency
  /attendances:
    get:
      consumes:
      - application/json
      description: Get list attendance
      parameters:
      - description: Page
        in: query
        name: page
        type: integer
      - description: Page Size
        in: query
        name: pageSize
        type: integer
      - default: desc
        description: Sort direction
        enum:
        - asc
        - desc
        in: query
        name: sort
        type: string
      - description: Class id
        in: query
        name: classId
        required: true
        type: string
      - description: Time range
        in: query
        name: period
        type: string
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              items:
                $ref: '#/definitions/attendances.Attendance'
              type: array
            type: object
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Get list attendance details api
      tags:
      - Attendance
    patch:
      consumes:
      - application/json
      description: Patch attendance
      parameters:
      - description: Patch attendance body
        in: body
        name: post
        required: true
        schema:
          items:
            $ref: '#/definitions/attendances.UpdateAttendanceRequest'
          type: array
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/attendances.Attendance'
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Patch attendance api
      tags:
      - Attendance
    post:
      consumes:
      - application/json
      description: Insert attendance
      parameters:
      - description: Create attendance body
        in: body
        name: post
        required: true
        schema:
          items:
            $ref: '#/definitions/attendances.CreateAttendanceRequest'
          type: array
      responses:
        "200":
          description: OK
        "422":
          description: Unprocessable Entity
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Create attendance api
      tags:
      - Attendance
  /classes:
    get:
      consumes:
      - application/json
      description: Get list class
      parameters:
      - description: Page
        in: query
        name: page
        type: integer
      - description: Page Size
        in: query
        name: pageSize
        type: integer
      - default: desc
        description: Sort direction
        enum:
        - asc
        - desc
        in: query
        name: sort
        type: string
      - description: Search term
        in: query
        name: search
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/classes.FindClassResp'
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Get list class details api
      tags:
      - Class
    post:
      consumes:
      - application/json
      description: Insert class
      parameters:
      - description: Create class body
        in: body
        name: post
        required: true
        schema:
          $ref: '#/definitions/classes.WriteClassRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/classes.Class'
        "422":
          description: Unprocessable Entity
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Create class api
      tags:
      - Class
  /classes/{id}:
    get:
      consumes:
      - application/json
      description: Get one class
      parameters:
      - description: Class ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/classes.Class'
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Get class details api
      tags:
      - Class
    put:
      consumes:
      - application/json
      description: Update class
      parameters:
      - description: Update class body
        in: body
        name: post
        required: true
        schema:
          $ref: '#/definitions/classes.WriteClassRequest'
      - description: Class ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/classes.Class'
        "422":
          description: Unprocessable Entity
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Update class api
      tags:
      - Class
  /parents:
    delete:
      consumes:
      - application/json
      description: Delete parent
      parameters:
      - collectionFormat: csv
        description: Parent IDs
        in: query
        items:
          type: integer
        name: ids
        required: true
        type: array
      responses:
        "200":
          description: OK
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Delete parent api
      tags:
      - Parent
    get:
      consumes:
      - application/json
      description: Get list parent
      parameters:
      - description: Page
        in: query
        name: page
        type: integer
      - description: Page Size
        in: query
        name: pageSize
        type: integer
      - default: desc
        description: Sort direction
        enum:
        - asc
        - desc
        in: query
        name: sort
        type: string
      - description: Search term
        in: query
        name: search
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/parents.FindParentResp'
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get list parent details api
      tags:
      - Parent
    post:
      consumes:
      - application/json
      description: Insert parent
      parameters:
      - description: Create parent body
        in: body
        name: post
        required: true
        schema:
          $ref: '#/definitions/parents.WriteParentRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/parents.Parent'
        "422":
          description: Unprocessable Entity
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Create parent api
      tags:
      - Parent
  /parents/{id}:
    get:
      consumes:
      - application/json
      description: Get one parent
      parameters:
      - description: Parent ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/parents.Parent'
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get parent details api
      tags:
      - Parent
    put:
      consumes:
      - application/json
      description: Update parent
      parameters:
      - description: Update parent body
        in: body
        name: post
        required: true
        schema:
          $ref: '#/definitions/parents.WriteParentRequest'
      - description: Parent ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/parents.Parent'
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Update parent api
      tags:
      - Parent
  /registrations:
    delete:
      consumes:
      - application/json
      description: Delete registration
      parameters:
      - collectionFormat: csv
        description: Registration IDs
        in: query
        items:
          type: integer
        name: ids
        required: true
        type: array
      responses:
        "200":
          description: OK
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Delete registration api
      tags:
      - Registration
    get:
      consumes:
      - application/json
      description: Get list registration
      parameters:
      - description: Page
        in: query
        name: page
        type: integer
      - description: Page Size
        in: query
        name: pageSize
        type: integer
      - default: desc
        description: Sort direction
        enum:
        - asc
        - desc
        in: query
        name: sort
        type: string
      - description: Search term
        in: query
        name: search
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/registrations.FindRegistrationResp'
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Get list registration details api
      tags:
      - Registration
    post:
      consumes:
      - application/json
      description: Insert registration
      parameters:
      - description: Create registration body
        in: body
        name: post
        required: true
        schema:
          $ref: '#/definitions/registrations.WriteRegistrationRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/registrations.Registration'
        "422":
          description: Unprocessable Entity
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Create registration api
      tags:
      - Registration
  /registrations/{id}:
    get:
      consumes:
      - application/json
      description: Get one registration
      parameters:
      - description: Registration ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/registrations.Registration'
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Get registration details api
      tags:
      - Registration
    patch:
      consumes:
      - application/json
      description: Mark a registration as processed
      parameters:
      - description: Registration ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Mark as done registration api
      tags:
      - Registration
    put:
      consumes:
      - application/json
      description: Update registration
      parameters:
      - description: Update registration body
        in: body
        name: post
        required: true
        schema:
          $ref: '#/definitions/registrations.WriteRegistrationRequest'
      - description: Registration ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/registrations.Registration'
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Update registration api
      tags:
      - Registration
  /students:
    get:
      consumes:
      - application/json
      description: Get list student
      parameters:
      - description: Page
        in: query
        name: page
        type: integer
      - description: Page Size
        in: query
        name: pageSize
        type: integer
      - default: desc
        description: Sort direction
        enum:
        - asc
        - desc
        in: query
        name: sort
        type: string
      - description: Search term
        in: query
        name: search
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/students.FindStudentResp'
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Get list student details api
      tags:
      - Student
    post:
      consumes:
      - application/json
      description: Insert student
      parameters:
      - description: Create student body
        in: body
        name: post
        required: true
        schema:
          $ref: '#/definitions/students.WriteStudentRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/students.Student'
        "422":
          description: Unprocessable Entity
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Create student api
      tags:
      - Student
  /students/{id}:
    delete:
      consumes:
      - application/json
      description: Delete student
      parameters:
      - description: Student ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/students.Student'
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Delete student api
      tags:
      - Student
    get:
      consumes:
      - application/json
      description: Get one student
      parameters:
      - description: Student ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/students.Student'
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Get student details api
      tags:
      - Student
    put:
      consumes:
      - application/json
      description: Update student
      parameters:
      - description: Update Student body
        in: body
        name: post
        required: true
        schema:
          $ref: '#/definitions/students.WriteStudentRequest'
      - description: Student ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/students.Student'
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Update student api
      tags:
      - Student
securityDefinitions:
  ApiKeyAuth:
    description: Apply "bearer " before token in authorization
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
